---
import { createStoryblokApiClient } from '~/features/storyblok/api'
import { createCommonApiClient } from '~/features/common/api'
import { createBlogApiClient } from '~/features/blog/api'
import type { SeoMetadata } from '~/features/storyblok/types/content-types'
import { getCurrentTheme } from '~/features/themes'
import HtmlDocument from '~/features/common/HtmlDocument/index.astro'
import DefaultSeoMetadata from '~/features/seo/DefaultSeoMetadata/index.astro'
import DefaultLayout from '~/features/common/DefaultLayout/index.astro'
import ArticleTagPage from '~/features/blog/ArticleTagPage'
import StoryblokBridge from '~/features/storyblok/StoryblokBridge'

const apiClient = createStoryblokApiClient(Astro.request)

const commonApiClient = createCommonApiClient(apiClient)

const global = await commonApiClient.getGlobalStory()

if (!global) {
  throw Error(`'Global' story not found.`)
}

const { tag } = Astro.params

if (!tag || typeof tag !== 'string') {
  throw Error(`'tag' param not provided.`)
}

const blogApiClient = createBlogApiClient(apiClient)

const articles = await blogApiClient.getArticleStories({
  withTag: tag
})

if (!articles.length) {
  return new Response(null, {
    status: 404,
    statusText: `No articles tagged with '${tag}' were found.`
  })
}

const metadata: SeoMetadata = {
  title: `Articles about ${tag}`,
  description: `A list of the articles that have been written about ${tag} on my blog.`
}

const currentTheme = getCurrentTheme(Astro.cookies)
const currentUrl = Astro.url
---

<HtmlDocument theme={currentTheme} metadata={metadata}>
  <DefaultSeoMetadata
    slot="seo-metadata"
    siteName={global.content.site_title}
    metadata={metadata}
    currentUrl={currentUrl}
  />

  <DefaultLayout global={global} currentUrl={currentUrl}>
    <ArticleTagPage tag={tag} articles={articles} />
  </DefaultLayout>

  {apiClient.isEditMode && <StoryblokBridge client:only="preact" />}
</HtmlDocument>
